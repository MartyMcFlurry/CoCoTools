>>> import cocotools as coco

>>> ebunch, failures = coco.multi_map_ebunch('Mapping', ['PP94', 'CP94'])
... # doctest: +NORMALIZE_WHITESPACE
Performing Mapping query for PP94
Performing Mapping query for CP94

>>> failures
[]

>>> pfc_map = coco.MapGraph()
>>> pfc_map.add_edges_from(ebunch)

>>> pfc_map.deduce_edges()

>>> con_bmaps = ['PP99', 'PP02', 'CP95b']
>>> ebunch, failures = coco.multi_map_ebunch('Connectivity', con_bmaps)
... # doctest: +NORMALIZE_WHITESPACE
Performing Connectivity query for PP99
Performing Connectivity query for PP02
Performing Connectivity query for CP95b

>>> failures
[]

>>> pfc_con = coco.ConGraph()
>>> pfc_con.add_edges_from(ebunch)

>>> result = coco.EndGraph()

>>> result.add_translated_edges(pfc_map, pfc_con, 'W40')

>>> result.edges()[0]
('W40-11', 'W40-8B')

>>> result['W40-11']['W40-8B']
{'ebunches_against': [('PP99', 'PP99')]}

>>> [s for s in pfc_map.successors('W40-11') if s.split('-')[0] == 'PP99']
['PP99-11']

>>> [s for s in pfc_map.successors('W40-8B') if s.split('-')[0] == 'PP99']
['PP99-8B']

>>> pfc_con['PP99-11']['PP99-8B']['Degree']
'0'
